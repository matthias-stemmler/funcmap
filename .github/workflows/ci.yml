name: Continuous integration

on:
  - pull_request
  - workflow_call
  - workflow_dispatch

concurrency: 
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=crate versioning=semver-coerced depName=cargo-expand
  VERSION_CARGO_EXPAND: 1.0.94
  # renovate: datasource=crate versioning=semver-coerced depName=cargo-nono
  VERSION_CARGO_NONO: 0.1.9

jobs:
  fmt-check:
    name: Cargo fmt check
    runs-on: ubuntu-latest

    steps:
      - name: Install stable toolchain with rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run format check
        run: cargo fmt --check

  lint:
    name: Cargo clippy
    runs-on: ubuntu-latest

    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Clippy
        run: cargo clippy

  doc:
    name: Cargo doc
    runs-on: ubuntu-latest

    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build docs
        run: cargo doc

  minimal-versions:
    name: Cargo test using minimal dependency versions
    runs-on: ubuntu-latest

    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/
          key: cargo-expand-${{ env.VERSION_CARGO_EXPAND }}

      - name: Install `cargo-expand`
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: cargo install --locked cargo-expand@${{ env.VERSION_CARGO_EXPAND }}

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install minimal dependency versions
        run: cargo +nightly update -Zminimal-versions

      - name: Test
        run: cargo +stable test -- --skip ui

  msrv:
    name: Check using minimal supported Rust version
    runs-on: ubuntu-latest

    steps:
      - name: Install MSRV toolchain
        uses: dtolnay/rust-toolchain@1.65

      - name: Checkout
        uses: actions/checkout@v4

      - name: Check
        run: cargo check

  no-std:
    name: Cargo nono check
    runs-on: ubuntu-latest

    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/
          key: cargo-nono-${{ env.VERSION_CARGO_NONO }}

      - name: Install `cargo-nono`
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: cargo install --locked cargo-nono@${{ env.VERSION_CARGO_NONO }}

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run cargo-nono
        run: cargo nono check --package funcmap

  miri:
    name: Cargo miri
    runs-on: ubuntu-latest

    steps:
      - name: Install nightly toolchain with Miri
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri

      - name: Setup Miri
        run: cargo miri setup

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run tests with Miri
        run: cargo miri test -p funcmap --lib
