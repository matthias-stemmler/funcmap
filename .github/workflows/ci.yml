name: Continuous integration

on:
  - pull_request
  - workflow_call
  - workflow_dispatch

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=crate depName=cargo-expand
  VERSION_CARGO_EXPAND: 1.0.17

jobs:
  fmt-check:
    name: Cargo fmt check
    runs-on: ubuntu-latest

    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo fmt --check`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  lint:
    name: Cargo clippy
    runs-on: ubuntu-latest

    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  doc:
    name: Cargo doc
    runs-on: ubuntu-latest

    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo doc`
        uses: actions-rs/cargo@v1
        with:
          command: doc

  minimal-versions:
    name: Cargo test using minimal dependency versions
    runs-on: ubuntu-latest

    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.cargo/
          key: cargo-bin-cargo-expand-${{ env.VERSION_CARGO_EXPAND }}

      - name: Install `cargo-expand`
        if: ${{ !steps.cache.outputs.cache-hit }}
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-expand
          version: ${{ env.VERSION_CARGO_EXPAND }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo update -Zminimal-versions`
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: -Zminimal-versions

      - name: Run `cargo test -- --skip ui`
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --skip ui

  msrv:
    name: Cargo check (${{ matrix.toolchain }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [1.56] # should be the same as in Cargo.toml of funcmap and funcmap_derive, and in docs

    steps:
      - name: Install ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo check`
        uses: actions-rs/cargo@v1
        with:
          command: check

  no-std:
    name: Cargo nono check
    runs-on: ubuntu-latest

    steps:
      - name: Install cargo-nono
        run: |
          curl -LSfs https://japaric.github.io/trust/install.sh | sh -s -- --git hobofan/cargo-nono

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo nono check --package funcmap`
        uses: actions-rs/cargo@v1
        with:
          command: nono
          args: check --package funcmap

  miri:
    name: Cargo miri
    runs-on: ubuntu-latest

    steps:
      - name: Determine date of latest nightly including Miri
        id: miri-nightly-date
        run: |
          echo "::set-output name=date::$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)"

      - name: Install latest nightly including Miri
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-${{ steps.miri-nightly-date.outputs.date }}
          override: true
          components: miri

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run `cargo miri test -p funcmap --lib`
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test -p funcmap --lib
